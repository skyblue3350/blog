<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on メモ帳</title><link>https://blog.sky-net.pw/tags/c#/</link><description>Recent content in C# on メモ帳</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 22 Aug 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.sky-net.pw/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>C#のソケット通信でクライアントが切断したか調べる</title><link>https://blog.sky-net.pw/post/csharp%E3%81%AE%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E9%80%9A%E4%BF%A1%E3%81%A7%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E3%81%8C%E5%88%87%E6%96%AD%E3%81%97%E3%81%9F%E3%81%8B%E8%AA%BF%E3%81%B9%E3%82%8B/</link><pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate><guid>https://blog.sky-net.pw/post/csharp%E3%81%AE%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E9%80%9A%E4%BF%A1%E3%81%A7%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E3%81%8C%E5%88%87%E6%96%AD%E3%81%97%E3%81%9F%E3%81%8B%E8%AA%BF%E3%81%B9%E3%82%8B/</guid><description>
あとで別記事書きますが簡単なソケット通信サーバーを書いた時に困ったのでメモ
クライアントの切断を検知するのにConnectedプロパティを使えば良さそうだなって思って痛い目にあった
信頼と実績のstackoverflowに解決策がありました
How to check if a socket is connected/disconnected in C#? Socketクラスの場合 1Socket client = listener.EndAcceptSocket(ar); 23while (clinet.Connected){ 4byte[] bytes = new byte[256]; 5client.Receive(bytes); 6string s = Encoding.UTF8.GetString(bytes); 78// 何かする 910if ( client.Poll(1000, SelectMode.SelectRead) &amp;amp;&amp;amp; (client.Available == 0) ){ 11break; 12} 13} こんな感じ
余談ですがwhileの外にstring buf = &amp;quot;&amp;quot;;って宣言してその変数に加算代入していくと最初に代入した値しか入ってないんですがバグですかね・・・？
結局TCPClientクラスからNetWorkStream貰ってStreamReaderで取得したんですが
TCPClientクラスの場合 TcpClientのプロパティにClientがあり、ここからSocketクラスが取得出来るのでほぼ一緒です
1TcpListener listener = (TcpListener) ar.AsyncState; 2TcpClient client = listener.EndAcceptTcpClient(ar); 3NetworkStream stream = client.GetStream(); 4StreamReader reader = new StreamReader (stream); 56while (client.</description></item></channel></rss>