<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flask on メモ帳</title><link>/tags/flask/</link><description>Recent content in Flask on メモ帳</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 03 Sep 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/flask/index.xml" rel="self" type="application/rss+xml"/><item><title>DockerizedしたFlaskをサブディレクトリで運用する</title><link>/post/dockerized%E3%81%97%E3%81%9Fflask%E3%82%92%E3%82%B5%E3%83%96%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%A7%E9%81%8B%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sun, 03 Sep 2017 00:00:00 +0000</pubDate><guid>/post/dockerized%E3%81%97%E3%81%9Fflask%E3%82%92%E3%82%B5%E3%83%96%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%A7%E9%81%8B%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>
はじめに DockerizedしたFlaskをサブディレクトリ等からリバースプロキシでアクセスするとリダイレクト周りでおかしくなって辛いことになります
ベタに実行しないで大人しくApacheかNginxから動くイメージを作れば良いんですけど…
設定 Nginx フロントのNginxからリバースプロキシするときに必要な情報を提供してあげます
1location /hoge/fuga/service/ { 2proxy_set_header Host $host; 3proxy_set_header X-Real-IP $remote_addr; 4proxy_set_header X-Scheme $scheme; 5proxy_set_header X-Forwarded-Host $host; 6proxy_set_header X-Forwarded-Server $host; 7proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 8proxy_set_header X-Script-Name /hoge/fuga/service; 9proxy_pass http://192.168.xxx.xxx:8888; 10} Flask http://flask.pocoo.org/snippets/35/
snippetsにあるコードを少し変更して使います
先程もらってきた値を参照してFlask側で使用するようにします
これで実行時にremoteの正しいIPを見るようになりURL周りの挙動も直ります
挙動が怪しいときはprint(environ, &amp;quot;\n&amp;quot;, file=sys.stderr)辺りのコメントアウトを外してdocker log見れば直せます（適当
reverseproxy.py
1import sys 23class ReverseProxy(object): 4def __init__(self, app): 5self.app = app 67def __call__(self, environ, start_response): 8# print(environ, &amp;#34;\n&amp;#34;, file=sys.stderr) 910script_name = environ.get(&amp;#34;HTTP_X_SCRIPT_NAME&amp;#34;, &amp;#34;&amp;#34;) 11if script_name: 12environ[&amp;#34;SCRIPT_NAME&amp;#34;] = script_name 13path_info = environ[&amp;#34;PATH_INFO&amp;#34;] 14if path_info.</description></item><item><title>Flaskでブログっぽいもの作ってみた</title><link>/post/flask%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%81%A3%E3%81%BD%E3%81%84%E3%82%82%E3%81%AE%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate><guid>/post/flask%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%81%A3%E3%81%BD%E3%81%84%E3%82%82%E3%81%AE%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>
貧弱な自鯖だとWordPressの表示に時間が掛かるので自作してみた
ソースコードはそのうち公開するかもしれない
アカウントの認証はTwitterアカウント
記事はマークダウンでGFMライクに書ける感じにしてみた
その他いろいろ拡張機能入れてみたので便利になった
RSSも一応書いてみたけどまともに機能してるのかわからん
ソーシャルボタンも結構適当だけど全体を見れば良い感じに仕上がったのでしばらく使ってみることにする
貧者なうちのサーバーではWordPressより軽快だし
コメント機能はつけられんことはないけど需要うすそうなので実装するのをやめた</description></item></channel></rss>