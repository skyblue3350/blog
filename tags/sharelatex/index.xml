<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sharelatex on メモ帳</title><link>/tags/sharelatex/</link><description>Recent content in sharelatex on メモ帳</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 16 Apr 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/sharelatex/index.xml" rel="self" type="application/rss+xml"/><item><title>sharelatexでjarticleをつかえるようにする その2</title><link>/post/sharelatex%E3%81%A7jarticle%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B-%E3%81%9D%E3%81%AE2/</link><pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate><guid>/post/sharelatex%E3%81%A7jarticle%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B-%E3%81%9D%E3%81%AE2/</guid><description>はじめに 前回の記事からバージョン上がったりしてそのままじゃいけなかったので改めて検証してDockerfileを書いた
LDAPやアカウント管理機能がPro版でしか対応されてないみたいなので利用するか迷うところ
アカウントを作成するだけならadminのアカウントで/admin/registerから作成できます
ただ作成したアカウントの一覧は見れません 不便
DBを直に見に行けば見えるでしょうけど…
環境 Docker version 17.03.1-ce Docker-compose version 1.12.0 sharelatex/sharelatex:0.6.1 ディレクトリツリー data以下に各コンテナをマウントさせる
1. 2├─ data 3├─ docker-compose.yml 4└─ sharelatex 5├─ Dockerfile 6└─ jlisting.sty Dockerfile platexが使えるようにするのとソースコードを貼る際に困るのでjlistingを導入する
1FROM sharelatex/sharelatex:0.6.1 23# platex install 4RUN apt-get update \ 5&amp;amp;&amp;amp; apt-get install texlive-lang-cjk -y \ 6&amp;amp;&amp;amp; apt-get clean \ 7&amp;amp;&amp;amp; apt-get autoremove 89# latexmk 10RUN cd /usr/local/texlive/2016/bin/x86_64-linux/ \ 11&amp;amp;&amp;amp; sed -ri &amp;#34;s/$latex = &amp;#39;latex %O %S&amp;#39;;/$latex = &amp;#39;platex -shell-escape %O %S&amp;#39;;/g&amp;#34; latexmk \ 12&amp;amp;&amp;amp; sed -ri &amp;#34;s/$bibtex = &amp;#39;bibtex %O %B&amp;#39;;/$bibtex = &amp;#39;pbibtex %O %B&amp;#39;;/g&amp;#34; latexmk \ 13&amp;amp;&amp;amp; sed -ri &amp;#34;s/$dvipdf = &amp;#39;dvipdf %O %S %D&amp;#39;;/$dvipdf = &amp;#39;dvipdfmx %O -o %D %S&amp;#39;;/g&amp;#34; latexmk 1415# jlisting 16ADD jlisting.</description></item><item><title>sharelatexでjarticleをつかえるようにする</title><link>/post/sharelatex%E3%81%A7jarticle%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate><guid>/post/sharelatex%E3%81%A7jarticle%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>ShareLatex とは Web上でLatexが書けるオープンソースプロジェクト
Webサービスとしても提供されてるけどオープンソースなので自前のサーバーで動かすこともできる
ただCloud LaTeXと違ってjarticleが使えないのでその辺もなんとかします
大体参考元記事のままです
というか大人しくDockerfile書いた方が早いです
環境 Docker
1.13.1 build 092cba3 Docker-compose
1.11.1 build 7c5d5e4 環境構築 イメージの用意 公式がDockerイメージを提供しているのでこちらを利用します
1$ mkdir sharelatex 2$ cd sharelatex 3$ wget https://raw.githubusercontent.com/sharelatex/sharelatex/master/docker-compose.yml 4$ docker-compose up -d 80番にフォワーディングされてるので一度アクセスして動作することを確認します
起動直後は502 bad gatewayが出ますがしばらく待てばログイン画面がでます
アカウント設定 docker execで管理用アカウントのIDを発行します
1$ docker exec sharelatex /bin/bash -c &amp;#34;cd /var/www/sharelatex; grunt user:create-admin --email joe@example.com&amp;#34; 登録用 URL
登録用URLにアクセスしてパスワードを設定しサンプルプロジェクトを作って問題なく動作することを確認します
イメージの編集 コンテナ内に入って作業します
1$ docker exec -it sharelatex bash platexのインストール 何はともあれplatexがないことには始まらないのでインストールします
1# apt-add-repository ppa:texlive-backports/ppa 2# apt-get install texlive-lang-cjk ここまででかなり時間かかるのでここで一度適当にコンテナをcommitしておくと失敗した時のダメージが軽くなります</description></item></channel></rss>